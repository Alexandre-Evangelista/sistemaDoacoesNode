// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
// Modelo Usuario
model Usuario {
  email           String       @id @db.VarChar(256)
  geolocalizacao  Unsupported("geometry")? // Tipo GEOMETRY do PostGIS
  foto            String?      @db.VarChar(256)
  tipo            Boolean?
  telefone        String?      @db.VarChar(11)
  nome            String       @db.VarChar(200)
  cpf             String?      @unique @db.VarChar(11)
  cnpj            String?      @unique @db.VarChar(14)
  avaliacoes      Avaliacao[]
  doacoes         Doacao[]
}


// Modelo ONG
model ONG {
  cnpj            String       @id @db.VarChar(14)
  nome            String       @db.VarChar(200)
  geolocalizacao  Unsupported("geometry") // Tipo GEOMETRY do PostGIS
  foto            String?      @db.VarChar(256)
  descricao       String?      @db.Text
  telefone        String       @db.VarChar(11)
  campanhas       Campanha[]
  avaliacoes      Avaliacao[]
  doacoes         Doacao[]
}


// Modelo Campanha
model Campanha {
  id              String          @id @default(uuid())
  descricao       String       @db.Text
  foto            String       @db.VarChar(256)
  geolocalizacao  Unsupported("geometry") // Tipo GEOMETRY do PostGIS
  datacriacao     DateTime     @db.Date
  cnpjOng         String?      @db.VarChar(14)
  ong             ONG?         @relation(fields: [cnpjOng], references: [cnpj], onDelete: Cascade, onUpdate: Cascade)
  doacoes         Doacao[]
}


// Modelo Doacao
model Doacao {
  id              String          @id @default(uuid())
  datadoacao      DateTime     @db.Date
  quantidade      Int
  tipo            String       @db.VarChar(200)
  email           String?      @db.VarChar(256)
  cnpj            String?      @db.VarChar(14)
  IDcampanha      String?
  usuario         Usuario?     @relation(fields: [email], references: [email])
  ong             ONG?         @relation(fields: [cnpj], references: [cnpj])
  campanha        Campanha?    @relation(fields: [IDcampanha], references: [id])
}


// Modelo Avaliacao
model Avaliacao {
  emailUsuario    String       @db.VarChar(256)
  cnpj            String       @db.VarChar(14)
  feedback        String       @db.Text


  usuario         Usuario      @relation(fields: [emailUsuario], references: [email], onDelete: Cascade, onUpdate: Cascade)
  ong             ONG          @relation(fields: [cnpj], references: [cnpj], onDelete: Cascade, onUpdate: Cascade)


  @@id([emailUsuario, cnpj])
}
