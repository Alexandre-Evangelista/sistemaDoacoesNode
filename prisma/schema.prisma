// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
// Modelo Usuario
model Usuario {
  id             String    @id @default(uuid()) @map("_id")
  email          String    @unique
  geolocalizacao Json?     
  foto           String?   
  tipo           Boolean?
  telefone       String?   
  nome           String    
  cpf            String?   @unique
  cnpj           String?   @unique
  avaliacoes     Avaliacao[]
  doacoes        Doacao[]
}


// Modelo ONG
model ONG {
  cnpj            String       @id @default(uuid()) @map("_id")
  nome            String      
  geolocalizacao Json?   
  
  foto            String?    
  descricao       String?     
  telefone        String
  senha           String       
  campanhas       Campanha[]
  avaliacoes      Avaliacao[]
  doacoes         Doacao[]
}


// Modelo Campanha
model Campanha {
  id             String    @id @default(uuid()) @map("_id")
  descricao      String
  foto           String
  geolocalizacao Json?     // Utilize JSON para armazenar os dados de localização (por exemplo, GeoJSON)
  datacriacao    DateTime
  cnpjOng        String?
  ong            ONG?      @relation(fields: [cnpjOng], references: [cnpj])
  doacoes        Doacao[]

}


// Modelo Doacao
model Doacao {
  id              String        @id @default(uuid()) @map("_id")
  datadoacao      DateTime     
  quantidade      Int
  tipo            String       
  email           String?      
  cnpj            String?     
  IDcampanha      String?
  usuario         Usuario?     @relation(fields: [email], references: [email])
  ong             ONG?         @relation(fields: [cnpj], references: [cnpj])
  campanha        Campanha?    @relation(fields: [IDcampanha], references: [id])
}


// Modelo Avaliacao
model Avaliacao {
  id           String   @id @default(uuid()) @map("_id")
  emailUsuario    String      
  cnpj            String       
  feedback        String     


  usuario         Usuario      @relation(fields: [emailUsuario], references: [email])
  ong             ONG          @relation(fields: [cnpj], references: [cnpj])
  @@unique([emailUsuario, cnpj])
}
